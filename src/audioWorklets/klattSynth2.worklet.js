(()=>{"use strict";function t(t,a,e){if(!isFinite(t)||!isFinite(a))return!1;if(t==a)return!0;const i=Math.abs(t-a);return i<=e||i<=Math.max(Math.abs(t),Math.abs(a))*e}class a{constructor(t,a=0){this.re=t,this.im=a}toString(){return"("+this.re+", "+this.im+")"}toNumber(t){const a=Math.abs(this.im);if(!(a<=t||a<=Math.abs(this.re)*t))throw new Error("The imaginary part of the complex number is not neglectable small for the conversion to a real number. re="+this.re+" im="+this.im+" eps="+t+".");return this.re}isNaN(){return isNaN(this.re)||isNaN(this.im)}isInfinite(){return this.re==1/0||this.re==-1/0||this.im==1/0||this.im==-1/0}isFinite(){return isFinite(this.re)&&isFinite(this.im)}equals(t){return t&&this.re==t.re&&this.im==t.im}fuzzyEquals(a,e){return t(this.re,a.re,e)&&t(this.im,a.im,e)}static expj(t){return new a(Math.cos(t),Math.sin(t))}static fromPolar(t,e){return new a(t*Math.cos(e),t*Math.sin(e))}abs(){return Math.hypot(this.re,this.im)}arg(){return Math.atan2(this.im,this.re)}conj(){return new a(this.re,-this.im)}neg(){return new a(-this.re,-this.im)}reciprocal(){if(this.isNaN())return a.NaN;if(this.isInfinite())return a.ZERO;const t=this.re*this.re+this.im*this.im;return 0==t?a.INFINITY:new a(this.re/t,-this.im/t)}exp(){return a.fromPolar(Math.exp(this.re),this.im)}log(){return new a(Math.log(this.abs()),this.arg())}sqr(){return new a(this.re*this.re-this.im*this.im,2*this.re*this.im)}sqrt(){if(0==this.re&&0==this.im)return a.ZERO;const t=this.abs();return new a(Math.sqrt((t+this.re)/2),Math.sign(this.im)*Math.sqrt((t-this.re)/2))}addReal(t){return new a(this.re+t,this.im)}add(t){return new a(this.re+t.re,this.im+t.im)}subReal(t){return new a(this.re-t,this.im)}static subFromReal(t,e){return new a(t-e.re,-e.im)}sub(t){return new a(this.re-t.re,this.im-t.im)}mulReal(t){return new a(this.re*t,this.im*t)}mul(t){return new a(this.re*t.re-this.im*t.im,this.re*t.im+this.im*t.re)}divReal(t){return new a(this.re/t,this.im/t)}div(t){const e=t.re*t.re+t.im*t.im;return new a((this.re*t.re+this.im*t.im)/e,(this.im*t.re-this.re*t.im)/e)}static divFromReal(t,e){const i=e.re*e.re+e.im*e.im;return new a(t*e.re/i,-t*e.im/i)}powInt(t){if(!Number.isInteger(t))throw new Error("powInt() used with non-integer exponent.");return a.fromPolar(Math.pow(this.abs(),t),this.arg()*t)}powReal(t){return this.log().mulReal(t).exp()}pow(t){return this.log().mul(t).exp()}}a.I=new a(0,1),a.ZERO=new a(0),a.ONE=new a(1),a.TWO=new a(2),a.NaN=new a(NaN,NaN),a.INFINITY=new a(1/0,1/0);const e={duration:1,f0:247,flutterLevel:.25,openPhaseRatio:.7,breathinessDb:-25,tiltDb:0,gainDb:NaN,agcRmsLevel:.18,nasalFormantFreq:NaN,nasalFormantBw:NaN,oralFormantFreq:[520,1006,2831,3168,4135,5020],oralFormantBw:[76,102,72,102,816,596],cascadeEnabled:!0,cascadeVoicingDb:0,cascadeAspirationDb:-25,cascadeAspirationMod:.5,nasalAntiformantFreq:NaN,nasalAntiformantBw:NaN,parallelEnabled:!1,parallelVoicingDb:0,parallelAspirationDb:-25,parallelAspirationMod:.5,fricationDb:-30,fricationMod:.5,parallelBypassDb:-99,nasalFormantDb:NaN,oralFormantDb:[0,-8,-15,-19,-30,-35]};class i{constructor(t){this.sampleRate=t,this.y1=0,this.passthrough=!0,this.muted=!1}set(t,a,e=1){if(t<=0||t>=this.sampleRate/2||a<=0||a>=1||!isFinite(t)||!isFinite(a)||!isFinite(e))throw new Error("Invalid filter parameters.");const i=2*Math.PI*t/this.sampleRate,s=(1-a**2*Math.cos(i))/(1-a**2);this.b=s-Math.sqrt(s**2-1),this.a=(1-this.b)*e,this.passthrough=!1,this.muted=!1}setPassthrough(){this.passthrough=!0,this.muted=!1,this.y1=0}setMute(){this.passthrough=!1,this.muted=!0,this.y1=0}getTransferFunctionCoefficients(){return this.passthrough?[[1],[1]]:this.muted?[[0],[1]]:[[this.a],[1,-this.b]]}step(t){if(this.passthrough)return t;if(this.muted)return 0;const a=this.a*t+this.b*this.y1;return this.y1=a,a}}class s{constructor(t){this.sampleRate=t,this.y1=0,this.y2=0,this.passthrough=!0,this.muted=!1}set(t,a,e=1){if(t<0||t>=this.sampleRate/2||a<=0||e<=0||!isFinite(t)||!isFinite(a)||!isFinite(e))throw new Error("Invalid resonator parameters.");this.r=Math.exp(-Math.PI*a/this.sampleRate);const i=2*Math.PI*t/this.sampleRate;this.c=-(this.r**2),this.b=2*this.r*Math.cos(i),this.a=(1-this.b-this.c)*e,this.passthrough=!1,this.muted=!1}setPassthrough(){this.passthrough=!0,this.muted=!1,this.y1=0,this.y2=0}setMute(){this.passthrough=!1,this.muted=!0,this.y1=0,this.y2=0}adjustImpulseGain(t){this.a=t}adjustPeakGain(t){if(t<=0||!isFinite(t))throw new Error("Invalid resonator peak gain.");this.a=t*(1-this.r)}getTransferFunctionCoefficients(){return this.passthrough?[[1],[1]]:this.muted?[[0],[1]]:[[this.a],[1,-this.b,-this.c]]}step(t){if(this.passthrough)return t;if(this.muted)return 0;const a=this.a*t+this.b*this.y1+this.c*this.y2;return this.y2=this.y1,this.y1=a,a}}class r{constructor(t){this.sampleRate=t,this.x1=0,this.x2=0,this.passthrough=!0,this.muted=!1}set(t,a){if(t<=0||t>=this.sampleRate/2||a<=0||!isFinite(t)||!isFinite(a))throw new Error("Invalid anti-resonator parameters.");const e=Math.exp(-Math.PI*a/this.sampleRate),i=2*Math.PI*t/this.sampleRate,s=-e*e,r=2*e*Math.cos(i),n=1-r-s;if(0==n)return this.a=0,this.b=0,void(this.c=0);this.a=1/n,this.b=-r/n,this.c=-s/n,this.passthrough=!1,this.muted=!1}setPassthrough(){this.passthrough=!0,this.muted=!1,this.x1=0,this.x2=0}setMute(){this.passthrough=!1,this.muted=!0,this.x1=0,this.x2=0}getTransferFunctionCoefficients(){return this.passthrough?[[1],[1]]:this.muted?[[0],[1]]:[[this.a,this.b,this.c],[1]]}step(t){if(this.passthrough)return t;if(this.muted)return 0;const a=this.a*t+this.b*this.x1+this.c*this.x2;return this.x2=this.x1,this.x1=t,a}}class n{constructor(){this.x1=0}getTransferFunctionCoefficients(){return[[1,-1],[1]]}step(t){const a=t-this.x1;return this.x1=t,a}}function l(){return 2*Math.random()-1}class h{constructor(t){const a=.25/Math.sqrt(1-1.5*Math.cos(2*Math.PI*1e3/1e4)+.5625),e=2.5*(t/1e4)**.33;this.lpFilter=new i(t),this.lpFilter.set(1e3,a,e)}getNext(){const t=l();return this.lpFilter.step(t)}}class o{constructor(t){this.sampleRate=t,this.resonator=void 0}startPeriod(t){if(!t)return void(this.resonator=void 0);this.resonator||(this.resonator=new s(this.sampleRate));const a=this.sampleRate/t;this.resonator.set(0,a),this.resonator.adjustImpulseGain(1),this.positionInPeriod=0}getNext(){if(!this.resonator)return 0;const t=1==this.positionInPeriod?1:2==this.positionInPeriod?-1:0;return this.positionInPeriod++,this.resonator.step(t)}}class u{constructor(){this.startPeriod(0)}startPeriod(t){this.openPhaseLength=t,this.x=0,this.b=-5/t**2,this.a=-this.b*t/3,this.positionInPeriod=0}getNext(){return this.positionInPeriod++>=this.openPhaseLength?(this.x=0,0):(this.a+=this.b,this.x+=this.a,this.x)}}function m(t){return t<=-99||isNaN(t)?0:Math.pow(10,t/20)}class c{constructor(t){this.mParms=t,this.fState={},this.absPosition=0,this.tiltFilter=new i(t.sampleRate),this.flutterTimeOffset=1e3*Math.random(),this.outputLpFilter=new s(t.sampleRate),this.outputLpFilter.set(0,t.sampleRate/2),this.initGlottalSource(),this.aspirationSourceCasc=new h(t.sampleRate),this.aspirationSourcePar=new h(t.sampleRate),this.fricationSourcePar=new h(t.sampleRate),this.nasalFormantCasc=new s(t.sampleRate),this.nasalAntiformantCasc=new r(t.sampleRate),this.oralFormantCasc=Array(6);for(let a=0;a<6;a++)this.oralFormantCasc[a]=new s(t.sampleRate);this.nasalFormantPar=new s(t.sampleRate),this.oralFormantPar=Array(6);for(let a=0;a<6;a++)this.oralFormantPar[a]=new s(t.sampleRate);this.differencingFilterPar=new n}generateFrame(t,a){if(t==this.fParms)throw new Error("FrameParms structure must not be re-used.");this.newFParms=t;for(let t=0;t<a.length;t++)(!this.pState||this.pState.positionInPeriod>=this.pState.periodLength)&&this.startNewPeriod(),a[t]=this.computeNextOutputSignalSample(),this.pState.positionInPeriod++,this.absPosition++;isNaN(t.gainDb)&&function(t,a){const e=t.length;if(!e)return;const i=function(t){const a=t.length;let e=0;for(let i=0;i<a;i++)e+=t[i]**2;return Math.sqrt(e/a)}(t);if(!i)return;const s=a/i;for(let a=0;a<e;a++)t[a]*=s}(a,t.agcRmsLevel)}computeNextOutputSignalSample(){const t=this.fParms,a=this.fState,e=this.pState;let i=this.glottalSource();i=this.tiltFilter.step(i),e.positionInPeriod<e.openPhaseLength&&(i+=l()*a.breathinessLin);let s=(t.cascadeEnabled?this.computeCascadeBranch(i):0)+(t.parallelEnabled?this.computeParallelBranch(i):0);return s=this.outputLpFilter.step(s),s*=a.gainLin,s}computeCascadeBranch(t){const a=this.fParms,e=this.fState,i=this.pState,s=t*e.cascadeVoicingLin,r=i.positionInPeriod>=i.periodLength/2?a.cascadeAspirationMod:0;let n=s+this.aspirationSourceCasc.getNext()*e.cascadeAspirationLin*(1-r);n=this.nasalAntiformantCasc.step(n),n=this.nasalFormantCasc.step(n);for(let t=0;t<6;t++)n=this.oralFormantCasc[t].step(n);return n}computeParallelBranch(t){const a=this.fParms,e=this.fState,i=this.pState,s=t*e.parallelVoicingLin,r=i.positionInPeriod>=i.periodLength/2?a.parallelAspirationMod:0,n=s+this.aspirationSourcePar.getNext()*e.parallelAspirationLin*(1-r),l=this.differencingFilterPar.step(n),h=i.positionInPeriod>=i.periodLength/2?a.fricationMod:0,o=l+this.fricationSourcePar.getNext()*e.fricationLin*(1-h);let u=0;u+=this.nasalFormantPar.step(n),u+=this.oralFormantPar[0].step(n);for(let t=1;t<6;t++)u+=(t%2==0?1:-1)*this.oralFormantPar[t].step(o);return u+=e.parallelBypassLin*o,u}startNewPeriod(){this.newFParms&&(this.fParms=this.newFParms,this.newFParms=void 0,this.startUsingNewFrameParameters()),this.pState||(this.pState={});const t=this.pState,a=this.mParms,e=this.fParms,i=this.absPosition/a.sampleRate+this.flutterTimeOffset;t.f0=function(t,a,e){if(a<=0)return t;const i=2*Math.PI*e;return t*(1+(Math.sin(12.7*i)+Math.sin(7.1*i)+Math.sin(4.7*i))*a/50)}(e.f0,e.flutterLevel,i),t.periodLength=t.f0>0?Math.round(a.sampleRate/t.f0):1,t.openPhaseLength=t.periodLength>1?Math.round(t.periodLength*e.openPhaseRatio):0,t.positionInPeriod=0,this.startGlottalSourcePeriod()}startUsingNewFrameParameters(){const t=this.mParms,a=this.fParms,e=this.fState;var i,s;e.breathinessLin=m(a.breathinessDb),e.gainLin=m(a.gainDb||0),i=this.tiltFilter,(s=a.tiltDb)?i.set(3e3,m(-s)):i.setPassthrough(),e.cascadeVoicingLin=m(a.cascadeVoicingDb),e.cascadeAspirationLin=m(a.cascadeAspirationDb),function(t,a){a.nasalFormantFreq&&a.nasalFormantBw?t.set(a.nasalFormantFreq,a.nasalFormantBw):t.setPassthrough()}(this.nasalFormantCasc,a),function(t,a){a.nasalAntiformantFreq&&a.nasalAntiformantBw?t.set(a.nasalAntiformantFreq,a.nasalAntiformantBw):t.setPassthrough()}(this.nasalAntiformantCasc,a);for(let t=0;t<6;t++)p(this.oralFormantCasc[t],a,t);e.parallelVoicingLin=m(a.parallelVoicingDb),e.parallelAspirationLin=m(a.parallelAspirationDb),e.fricationLin=m(a.fricationDb),e.parallelBypassLin=m(a.parallelBypassDb),function(t,a){a.nasalFormantFreq&&a.nasalFormantBw&&m(a.nasalFormantDb)?(t.set(a.nasalFormantFreq,a.nasalFormantBw),t.adjustPeakGain(m(a.nasalFormantDb))):t.setMute()}(this.nasalFormantPar,a);for(let e=0;e<6;e++)f(this.oralFormantPar[e],t,a,e)}initGlottalSource(){switch(this.mParms.glottalSourceType){case 0:this.impulsiveGSource=new o(this.mParms.sampleRate),this.glottalSource=()=>this.impulsiveGSource.getNext();break;case 1:this.naturalGSource=new u,this.glottalSource=()=>this.naturalGSource.getNext();break;case 2:this.glottalSource=l;break;default:throw new Error("Undefined glottal source type.")}}startGlottalSourcePeriod(){switch(this.mParms.glottalSourceType){case 0:this.impulsiveGSource.startPeriod(this.pState.openPhaseLength);break;case 1:this.naturalGSource.startPeriod(this.pState.openPhaseLength)}}}function p(t,a,e){const i=e<a.oralFormantFreq.length?a.oralFormantFreq[e]:NaN,s=e<a.oralFormantBw.length?a.oralFormantBw[e]:NaN;i&&s?t.set(i,s):t.setPassthrough()}function f(t,a,e,i){const s=i+1,r=i<e.oralFormantFreq.length?e.oralFormantFreq[i]:NaN,n=i<e.oralFormantBw.length?e.oralFormantBw[i]:NaN,l=m(i<e.oralFormantDb.length?e.oralFormantDb[i]:NaN);if(r&&n&&l){t.set(r,n);const e=2*Math.PI*r/a.sampleRate,i=Math.sqrt(2-2*Math.cos(e)),h=s>=2?l/i:l;t.adjustPeakGain(h)}else t.setMute()}class d extends AudioWorkletProcessor{static get parameterDescriptors(){return[{name:"f0",defaultValue:247,minValue:0,maxValue:1e3},{name:"flutterLevel",defaultValue:.25,minValue:0,maxValue:1},{name:"openPhaseRatio",defaultValue:.7,minValue:0,maxValue:1},{name:"breathinessDb",defaultValue:-25,minValue:-99,maxValue:30},{name:"tiltDb",defaultValue:0,minValue:-99,maxValue:30},{name:"gainDb",defaultValue:0,minValue:-99,maxValue:30},{name:"agcRmsLevel",defaultValue:.18,minValue:0,maxValue:1},{name:"f1",defaultValue:520,minValue:0,maxValue:6e3},{name:"f2",defaultValue:1006,minValue:0,maxValue:6e3},{name:"f3",defaultValue:2831,minValue:0,maxValue:6e3},{name:"f4",defaultValue:3168,minValue:0,maxValue:6e3},{name:"f5",defaultValue:4135,minValue:0,maxValue:6e3},{name:"f6",defaultValue:5020,minValue:0,maxValue:6e3},{name:"b1",defaultValue:76,minValue:0,maxValue:1e3},{name:"b2",defaultValue:102,minValue:0,maxValue:1e3},{name:"b3",defaultValue:72,minValue:0,maxValue:1e3},{name:"b4",defaultValue:102,minValue:0,maxValue:1e3},{name:"b5",defaultValue:816,minValue:0,maxValue:1e3},{name:"b6",defaultValue:596,minValue:0,maxValue:1e3},{name:"db1",defaultValue:0,minValue:-99,maxValue:30},{name:"db2",defaultValue:-8,minValue:-99,maxValue:30},{name:"db3",defaultValue:-15,minValue:-99,maxValue:30},{name:"db4",defaultValue:-19,minValue:-99,maxValue:30},{name:"db5",defaultValue:-30,minValue:-99,maxValue:30},{name:"db6",defaultValue:-35,minValue:-99,maxValue:30},{name:"cascadeEnabled",defaultValue:1,minValue:0,maxValue:1},{name:"cascadeVoicingDb",defaultValue:0,minValue:-99,maxValue:30},{name:"cascadeAspirationDb",defaultValue:-25,minValue:-99,maxValue:30},{name:"cascadeAspirationMod",defaultValue:.5,minValue:0,maxValue:1},{name:"nasalFormantFreq",defaultValue:0,minValue:0,maxValue:1e3},{name:"nasalFormantFreqToggle",defaultValue:0,minValue:0,maxValue:1},{name:"nasalFormantBw",defaultValue:0,minValue:0,maxValue:1e3},{name:"nasalFormantBwToggle",defaultValue:0,minValue:0,maxValue:1},{name:"nasalAntiformantFreq",defaultValue:0,minValue:0,maxValue:1e3},{name:"nasalAntiformantFreqToggle",defaultValue:0,minValue:0,maxValue:1},{name:"nasalAntiformantBw",defaultValue:0,minValue:0,maxValue:1e3},{name:"nasalAntiformantBwToggle",defaultValue:0,minValue:0,maxValue:1},{name:"parallelEnabled",defaultValue:0,minValue:0,maxValue:1},{name:"parallelVoicingDb",defaultValue:0,minValue:-99,maxValue:30},{name:"parallelAspirationDb",defaultValue:-25,minValue:-99,maxValue:30},{name:"parallelAspirationMod",defaultValue:.5,minValue:0,maxValue:1},{name:"fricationDb",defaultValue:-30,minValue:-99,maxValue:30},{name:"fricationMod",defaultValue:.5,minValue:0,maxValue:1},{name:"parallelBypassDb",defaultValue:-99,minValue:-99,maxValue:30},{name:"nasalFormantDb",defaultValue:-99,minValue:-99,maxValue:30},{name:"extGain",defaultValue:0,minValue:0,maxValue:1}]}constructor(){super(),this.mParms={sampleRate,glottalSourceType:1},this.fParms=e,this.fParms.duration=128/sampleRate,this.generator=new c(this.mParms)}trigFunc(t,a){return t.length>1?t[a]:t[0]}process(t,a,e){const i=e.f0,s=e.f1,r=e.f2,n=e.f3,l=e.f4,h=e.f5,o=e.f6,u=e.b1,m=e.b2,c=e.b3,p=e.b4,f=e.b5,d=e.b6,g=e.db1,F=e.db2,V=e.db3,b=e.db4,P=e.db5,w=e.db6,x=e.flutterLevel,N=e.openPhaseRatio,M=e.breathinessDb,D=e.tiltDb,R=e.gainDb,S=e.agcRmsLevel,A=e.cascadeEnabled,L=e.cascadeVoicingDb,I=e.cascadeAspirationDb,y=e.cascadeAspirationMod,B=e.nasalFormantFreq,q=e.nasalFormantBw,v=e.nasalAntiformantFreq,E=e.nasalAntiformantBw,T=e.nasalFormantFreqToggle,C=e.nasalFormantBwToggle,G=e.nasalAntiformantFreqToggle,O=e.nasalAntiformantBwToggle,k=e.parallelEnabled,j=e.parallelVoicingDb,U=e.parallelAspirationDb,Z=e.parallelAspirationMod,z=e.fricationDb,J=e.fricationMod,W=e.parallelBypassDb,Y=e.nasalFormantDb,H=e.extGain;let K=this.fParms;K.duration=1/sampleRate;for(let t=0;t<a[0][0].length;t++){K=JSON.parse(JSON.stringify(K)),K.f0=this.trigFunc(i,t),K.oralFormantFreq=[this.trigFunc(s,t),this.trigFunc(r,t),this.trigFunc(n,t),this.trigFunc(l,t),this.trigFunc(h,t),this.trigFunc(o,t)],K.oralFormantBw=[this.trigFunc(u,t),this.trigFunc(m,t),this.trigFunc(c,t),this.trigFunc(p,t),this.trigFunc(f,t),this.trigFunc(d,t)],K.oralFormantDb=[this.trigFunc(g,t),this.trigFunc(F,t),this.trigFunc(V,t),this.trigFunc(b,t),this.trigFunc(P,t),this.trigFunc(w,t)],K.flutterLevel=this.trigFunc(x,t),K.openPhaseRatio=this.trigFunc(N,t),K.breathinessDb=this.trigFunc(M,t),K.tiltDb=this.trigFunc(D,t),K.gainDb=this.trigFunc(R,t),K.agcRmsLevel=this.trigFunc(S,t),K.cascadeEnabled=!!this.trigFunc(A,t),K.cascadeVoicingDb=this.trigFunc(L,t),K.cascadeAspirationDb=this.trigFunc(I,t),K.cascadeAspirationMod=this.trigFunc(y,t),K.nasalFormantFreq=this.trigFunc(T)?this.trigFunc(B,t):NaN,K.nasalFormantBw=this.trigFunc(C)?this.trigFunc(q,t):NaN,K.nasalAntiformantFreq=this.trigFunc(G)?this.trigFunc(v,t):NaN,K.nasalAntiformantBw=this.trigFunc(O)?this.trigFunc(E,t):NaN,K.parallelEnabled=!!this.trigFunc(k,t),K.parallelVoicingDb=this.trigFunc(j,t),K.parallelAspirationDb=this.trigFunc(U,t),K.parallelAspirationMod=this.trigFunc(Z,t),K.fricationDb=this.trigFunc(z,t),K.fricationMod=this.trigFunc(J,t),K.parallelBypassDb=this.trigFunc(W,t),K.nasalFormantDb=this.trigFunc(Y,t);const e=a[0][0].subarray(t,t+1);this.generator.generateFrame(K,e),a[0][0][t]=this.trigFunc(H,t)*e[0]}return!0}}registerProcessor("klatt-synth",d)})();